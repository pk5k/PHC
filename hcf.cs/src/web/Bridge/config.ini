; name of a http header, which indicates the action that should be performed
action_key = 'action'
header.action = 'X-Bridge-Action'

; name of a http header, which indicates the hypercell which should be used for the action
header.target = 'X-Bridge-Target'

; if the bridge-indicator matches one of the section-names below, the action-method inside the server-channel will be executed
; the target_key will be passed as first argument to this method
[invoke]

; raw-merge fqns which can be accessed by this action - if the target raw-merge is not inside this list,
; the action will fail (with HTTP-response code 403 - forbidden)
; this is for security-reasons, to avoid executing any raw-merge somebody wants
; wildcards are possible to match rmfqn patterns
allow = ['your_package.*']

; this is the method, which will be called inside the server-channel to perform this action
; this configuration section will be passed to the method as argument
action = 'httpInvoke'

; this is a custom setting for the invoke-action
; an additional key of the argument-array-key, which defines the method which should be invoked inside the target-raw-merge
method_key = 'method'

[render:invoke]

; copy invoke-actions config and overwrite just the action-method, keep the whitelist and ignore the custom method_key setting
action = 'httpRender'
method_key = null
