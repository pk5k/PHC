arg = "route"; key of the $_GET array that will be used as the value of the route-section.
default = "-bridge"; if the arg is not set, this route will be used

; ERROR PAGES
; If an exception is thrown while rendering the output of a section below
; and no catch was specified, the current http-response-code (or 500 if nothing was set until this moment)
; will be checked against the error-array-keys below. The value is a file path that will be used as output.
; If no value is mapped to the http-response-code, a placeholder-text will be displayed.
; NOTICE: This feature won't work, if your surface.ini is configured to display-errors = true;
; in this case, the exception + stacktrace will be displayed instead of the error-page.
error[403] = "static/not-allowed.html"
error[404] = "static/not-found.html"
error[500] = "static/error.html"
error[503] = "http://www.checkupdown.com/status/E503_de.html"

; TIP: before checking the $_GET array against the argument above, $_GET['!'] will be checked.
; 	example: http://blablabla.com?!=-internal-route
; The ! argument is used by the hcf, to force the current http-hook (independent of the http-hooks array
; inside the surface.ini). The value of this argument will be used as route-section. If the argument
; of the configuration above is also set, it will be ignored.
; This feature is used for internal-routing like the hcf.web.Bridge hypercell.

; one section = one route
; internal routes (that use the $_GET['!'] arg) should be marked with a leading dash,
; because they have to be present in every hcf.http.Router configuration

[-bridge]
; DON'T REMOVE THIS SECTION AND ADD IT TO YOUR ATTACHMENT IN CASE OF OVERRIDING IT
; THIS IS REQUIRED AS LOOPBACK FOR hcf.web.Bridge
post.output = "hcf.web.Bridge"; HCFQN which will be instantiated with the $_GET parameters. The response (trough the HCs output assembly) will be returned from ::route()

[-style]
; DON'T REMOVE THIS SECTION AND ADD IT TO YOUR ATTACHMENT IN CASE OF OVERRIDING IT
; THIS IS REQUIRED AS STYLE-LINK FOR hcf.web.Container
get.output = "hcf.web.Container.Autoloader.provider.Style"; this will be used as fake-file: <style link="?!-style" type="text/css"/>

[-script]
; DON'T REMOVE THIS SECTION AND ADD IT TO YOUR ATTACHMENT IN CASE OF OVERRIDING IT
; THIS IS REQUIRED AS SCRIPT-SOURCE FOR hcf.web.Container
get.output = "hcf.web.Container.Autoloader.provider.Script"; this will be used as fake-file: <script src="?!-script" language="javascript"/>
