; SURFACE.INI
; A surface is the access-point to your web-/cli-application. 
; It's represented by a *.php file which loads the HCF inside.
; In the same directory is a copy of this surface.ini which will be
; used by the HCF to setup it's environment.
;
; TIP : This configuration can be applyed to individual *.php files,
; by splitting up this config into [myScriptNameWithoutExtension] sections (redundant). 

; -
; Cellspaces which will be add to the autoloader at initialisation-time
include = []

; -
; directories that contain 3rd-party non-PHC libraries/frameworks
; Also, it must contain every file, required/included inside a Hypercell as dependency
libs = []

; -
; The path to the shared-directory is relative to the location of the surface.ini (= your cwd, your document-root in the most cases)
; Make sure, the shared directory can be accessed via http, because HCs
; like hcf.web.Container use the shared directory as root-directory to enable
; the autoloader for css and js files.
;
; This value is provided by the global constant HCF_SHARED
shared = ''

; -
; This directory contains hypercell attachments, which will be overridden if it's name is matching 
; following pattern
;
; 	my.hypercell.full.qualified.Name@assembly.type
;
; e.g. hcf.http.Router.config.ini - if this attachment gets accessed, while this surface.ini is active,
; the attachment out of this directory gets used BEFORE it's HCs own copy
;
; This value is provided by the global constant HCF_ATT_OVERRIDE
attachments = ''

; -
; enable strict-mode of php - this value is provided by the global constant HCF_STRICT
strict = true

; -
; display errors and exceptions on the std-output - should be disabled on production websites
; NOTICE: if set to false and errors appear, an http 500 error will be send.
display-errors = true

; -
; If the surface is called by a http-request method, defined inside the array below,
; this http-hook will be triggered. This hook will execute the hcf.http.Router. When done, 
; it sends the output as response to the client and quits the script-execution directly.
;
; TIP : Use this feature (with the GET-hook), to delegate the complete navigation of your 
; web-application to the hcf.http.Router.
;
; NOTICE: When executing a surface and $_GET['!'] is set, the http-hook will be used in
; any way. This feature is required as "extra-channel" for internal routing like the
; hcf.http.Bridge component does.
http-hooks = []