[parser]
regex = "/{{((?:[0-9a-zA-Z_])*):((?:[0-9a-zA-Z_$#,\. ])*)}}/i"; Regex to match placeholders
DOMT = true; Die-On-Missing-Type - if true, a PlaceholderException will be thrown, if type cannot be resolved to a Placeholder-Generalisation, on false the PH will be skipped
recursive = true; re-run the parse method, until no placeholders can be found anymore. In case of nested placeholders, the regex will only match the inner-ph. After parsing this, the outter ph would be matched on a second run

[placeholder]
base = "hcdk.data.ph.Processor"; Name of the base processor Hypercell
package = "hcdk.data.ph.Processor."; hc-package name which HCs inside implement the placeholder-base
suffix = "Processor"; suffix, which will be append to the placeholders-type-name (e.g. ConstProcessor for {{const:MY_CONST}})